services:
  # Headscale control server
  headscale:
    image: headscale/headscale:latest
    volumes:
      - ./config.yaml:/etc/headscale/config.yaml:ro
      - headscale-data:/var/lib/headscale
    ports:
      - "8080:8080" # API/Web UI
      - "9090:9090" # Metrics
    command: serve
    networks:
      - tailnet-demo

  # Backend API service
  api-backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    environment:
      - SERVICE_NAME=api
      - PORT=8082
    ports:
      - "8082:8082"
    networks:
      - tailnet-demo
    labels:
      - "tailnet.enabled=true"
      - "tailnet.service.name=demo-api"
      - "tailnet.service.port=8082"
      - "tailnet.service.tls_mode=off"
      - "tailnet.service.whois_enabled=true"

  # Backend Web service
  web-backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    environment:
      - SERVICE_NAME=web
      - PORT=8083
    ports:
      - "8083:8083"
    networks:
      - tailnet-demo
    labels:
      - "tailnet.enabled=true"
      - "tailnet.service.name=demo-web"
      - "tailnet.service.port=8083"
      - "tailnet.service.tls_mode=off"
      - "tailnet.service.whois_enabled=true"

  # tailnet proxy with Headscale
  tailnet:
    image: ghcr.io/sudosu404/tailnet-cli:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - tailnet-state:/var/lib/tailnet
    environment:
      # When using Headscale, we'll use auth keys instead of OAuth
      - TS_AUTHKEY=${TS_AUTHKEY}
    command: ["--provider", "docker", "--verbose"]
    labels:
      # Tailscale configuration
      - "tailnet.tailscale.control_url=http://headscale:8080"
      - "tailnet.tailscale.auth_key_env=TS_AUTHKEY"
      - "tailnet.tailscale.state_dir=/var/lib/tailnet"
    depends_on:
      - headscale
    networks:
      - tailnet-demo

volumes:
  tailnet-state:
  headscale-data:

networks:
  tailnet-demo:
